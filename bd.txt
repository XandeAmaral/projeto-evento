CREATE TABLE usuario(
    id_usu INT PRIMARY KEY AUTO_INCREMENT,
	cpf_usu VARCHAR(11) UNIQUE,
	nome_usu VARCHAR(50),
    dataNasc_usu DATE
);

CREATE TABLE integrante(
    id_int INT PRIMARY KEY AUTO_INCREMENT,
    personagem_int VARCHAR(50),
    nome_int VARCHAR(50),
    data_int DATE,
    cpf_int VARCHAR(11)
);

CREATE TABLE categoria(
    id_cat INT PRIMARY KEY AUTO_INCREMENT,
    nome_cat VARCHAR(80),
    cor_cat VARCHAR(15),
    descricao_cat VARCHAR(200)
);

CREATE TABLE evento(
    id_eve INT PRIMARY KEY AUTO_INCREMENT,
    nome_eve VARCHAR(50),
    data_eve DATE,
    local_eve VARCHAR(60),
    limite_eve INT CHECK(limite_eve >= 0),
    id_cat INT NOT NULL,
    id_int INT NOT NULL,
	foreign key (id_cat) references categoria(id_cat),
	foreign key (id_int) references integrante(id_int)
);

CREATE TABLE ingresso(
    id_ing INT,
    tipo_ing VARCHAR(50),
    preco_ing DOUBLE(10,2),
    id_usu INT NOT NULL,
    id_eve INT NOT NULL,
    foreign key (id_usu) references usuario(id_usu),
    foreign key (id_eve) references evento(id_eve)
);



DELIMITER &&
CREATE PROCEDURE salvar_usuario (IN var_id INT,
                                    var_cpf VARCHAR(11),
                                    var_nome VARCHAR(50),
                                    var_dataNasc DATE)
BEGIN
  IF (EXISTS(SELECT id_usu FROM usuario WHERE id_usu = var_id)) THEN
    UPDATE usuario SET cpf_usu = var_cpf, nome_usu = var_nome, dataNasc_usu = var_dataNasc WHERE id_usu = var_id;
  ELSE
    INSERT INTO usuario VALUES (null, var_cpf, var_nome, var_dataNasc);
  END IF;
END
&&

CREATE PROCEDURE salvar_integrante (IN var_id INT,
                                    var_personagem VARCHAR(50),
                                    var_nome VARCHAR(50),
                                    var_data DATE,
                                    var_cpf VARCHAR(11))
BEGIN
  IF (EXISTS(SELECT id_int FROM integrante WHERE id_int = var_id)) THEN
    UPDATE integrante SET personagem_int = var_personagem, nome_int = var_nome, data_int = var_data, cpf_int = var_cpf WHERE id_int = var_id;
  ELSE
    INSERT INTO integrante VALUES (null, var_personagem, var_nome, var_data, var_cpf);
  END IF;
END
&&

CREATE PROCEDURE salvar_categoria (IN var_id INT,
                                    var_nome VARCHAR(50),
                                    var_cor VARCHAR(15),
                                    var_descricao VARCHAR(200))
BEGIN
  IF (EXISTS(SELECT id_cat FROM categoria WHERE id_cat = var_id)) THEN
    UPDATE categoria SET nome_cat = var_nome, cor_cat = var_cor, descricao_cat = var_descricao WHERE id_cat = var_id;
  ELSE
    INSERT INTO categoria VALUES (null, var_nome, var_cor, var_descricao);
  END IF;
END
&&

CREATE PROCEDURE salvar_evento (IN var_id INT,
                                    var_nome VARCHAR(50),
                                    var_data DATE,
                                    var_local VARCHAR(60),
                                    var_limite INT,
                                    var_id_cat INT,
                                    var_id_int INT)
BEGIN
  IF (EXISTS(SELECT id_eve FROM evento WHERE id_eve = var_id)) THEN
    UPDATE evento SET nome_eve = var_nome, data_eve = var_data, local_eve = var_local,
                    limite_eve = var_limite, id_cat = var_id_cat, id_int = var_id_int  WHERE id_eve = var_id;
  ELSE
    INSERT INTO evento VALUES (null, var_nome, var_data,var_local, var_limite, var_id_cat, var_id_int);
  END IF;
END
&&

CREATE PROCEDURE salvar_ingresso (IN var_id INT,
                                    var_tipo VARCHAR(50),
                                    var_preco DOUBLE(10,2),
                                    var_id_usu INT,
                                    var_id_eve INT)
BEGIN
  IF (EXISTS(SELECT id_ing FROM ingresso WHERE id_ing = var_id)) THEN
    UPDATE ingresso SET tipo_ing = var_tipo, preco_ing = var_preco, id_usu = var_id_usu, id_eve = var_id_eve WHERE id_ing = var_id;
  ELSE
    INSERT INTO ingresso VALUES (null, var_tipo, var_preco, var_id_usu, var_id_eve);
  END IF;
END&&
DELIMITER ;



Salvar
CALL salvar_usuario(null, '12345678901', 'Alice', '17/08/2001');
CALL salvar_integrante(null, 'Arvore', 'Maria', '04/05/2023' , '12345678906');
CALL salvar_categoria(null, 'Terror', 'preto', null);
CALL salvar_evento(null, 'A calça do terror', '04/05/2023', 'Indaiaclube', 68, 1, 1);
CALL salvar_ingresso(null, 'Meia', 85.00, 1,1);

Editar
CALL salvar_usuario(1, '12345678901', 'Alice', '17/08/2005');

Deletar procdedure
DROP PROCEDURE salvar_evento;
DROP PROCEDURE salvar_ingresso;
DROP PROCEDURE salvar_integrante;
DROP PROCEDURE salvar_usuario;
DROP PROCEDURE salvar_categoria;


para integrante faça a procedure crud_integrante (com salvar, editar e excluir) e implemente no projeto php ou em outra linguagem a sua escolha

DELIMITER &&
CREATE PROCEDURE crud_integrante (IN var_id INT,
                                    var_personagem VARCHAR(50),
                                    var_nome VARCHAR(50),
                                    var_data DATE,
                                    var_cpf VARCHAR(11),
                                    option_delete INT)
BEGIN
  IF (EXISTS(SELECT id_int FROM integrante WHERE id_int = var_id)) THEN
    IF(option_delete == 1) THEN
        DELETE FROM integrante WHERE id_int = var_id 
    ELSE
        UPDATE integrante SET personagem_int = var_personagem, nome_int = var_nome, data_int = var_data, cpf_int = var_cpf WHERE id_int = var_id;
    END IF
  ELSE
    INSERT INTO integrante VALUES (null, var_personagem, var_nome, var_data, var_cpf);
  END IF;
END
&&